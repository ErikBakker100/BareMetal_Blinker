.DEFAULT_GOAL := all
AOPS = --warn --fatal-warnings
COPS = -Wall -O2 -nostdlib -nostartfiles -ffreestanding -D$(PIVERSION) -DCLOCK_SPEED=$(CLOCK_SPEED) -DBAUDRATE=$(BAUDRATE)
DEBUG_COPS = $(COPS) -g

START_OBJ = $(BUILD_DIR)/start.o
MAIN_OBJ = $(BUILD_DIR)/main.o
ELF      = $(BUILD_DIR)/main.elf
IMG      = $(BUILD_DIR)/$(OUTPUT)
LIST     = $(BUILD_DIR)/main.list
SREC     = $(BUILD_DIR)/main.srec
START_SRC = $(SRC_DIR)/start.s
SRC_FILES := $(wildcard $(SRC_DIR)/*.c)
OBJ_FILES := $(patsubst $(SRC_DIR)/%.c, $(BUILD_DIR)/%.o, $(SRC_FILES))

all: $(BUILD_DIR) $(COPY_DIR) $(IMG) copy_img

clean:
	powershell -Command "if (Test-Path '$(BUILD_DIR)') { Remove-Item -Recurse -Force '$(BUILD_DIR)' }"

debug: all $(LIST)

$(LIST): $(ELF)
	$(ARMGNU)objdump -D $< > $@

$(BUILD_DIR):
	powershell -Command "if (-not (Test-Path '$(BUILD_DIR)')) { New-Item -ItemType Directory -Path '$(BUILD_DIR)' | Out-Null }"

$(START_OBJ): $(START_SRC) | $(BUILD_DIR)
	$(ARMGNU)as $(AOPS) $< -o $@

ifeq ($(MAKECMDGOALS),debug)
CFLAGS := $(DEBUG_COPS)
else
CFLAGS := $(COPS)
endif

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c | $(BUILD_DIR)
	$(ARMGNU)gcc $(CFLAGS) -c $< -o $@

$(ELF): $(START_OBJ) $(OBJ_FILES) $(LINKER_SCRIPT) 
	$(ARMGNU)ld $(START_OBJ) $(OBJ_FILES) -T $(LINKER_SCRIPT) -o $@

$(IMG): $(ELF)
	$(ARMGNU)objcopy --srec-forceS3 $< -O srec $(SREC)
	$(ARMGNU)objcopy $< -O binary $@

copy_img: $(IMG)
	powershell -Command "Copy-Item -Path '$(BUILD_DIR)/$(OUTPUT)' -Destination '$(COPY_DIR)' -Force"

$(COPY_DIR):
	powershell -Command "if (-not (Test-Path '$(COPY_DIR)')) { New-Item -ItemType Directory -Path '$(COPY_DIR)' | Out-Null }"
